
[0m[0m
Express server listening on 9000, in test mode
[0m  GET /api/gameHistory[0m
hallo { id: '1234',
  gameID: '999',
  command: 'createGame',
  userName: 'Oli',
  nameOfGame: 'The Game',
  timeStamp: '2014-12-02T11:29:29' } [ { id: '1234',
    gameID: '999',
    event: 'GameCreated',
    userName: 'Oli',
    nameOfGame: 'The Game',
    timeStamp: '2014-12-02T11:29:29' } ]
[90mPOST /api/createGame [32m200 [90m15ms - 127b[0m
[90mGET /api/gameHistory/999 [32m200 [90m3ms - 127b[0m
[2K[0G  [32m  âœ“[0m[90m should respond with JSON array with created events for game [0m[31m(364ms)[0m

[0m  In memory store[0m
[2K[0G  [32m  âœ“[0m[90m Should return empty array for unknown id [0m
[2K[0G  [32m  âœ“[0m[90m Should return events previously stored [0m
[2K[0G  [32m  âœ“[0m[90m should append stored events to events previously stored [0m

[0m  Player makes move command[0m
[0m    when starting game[0m
[ [ '', '', '' ], [ '', '', '' ], [ '', '', '' ] ]
[2K[0G    [32m  âœ“[0m[90m should let player move [0m
[0m    when making illegal move[0m
[ [ 'X', '', '' ], [ '', '', '' ], [ '', '', '' ] ]
[2K[0G    [32m  âœ“[0m[90m should try to make move where someone moved before [0m
[0m    player wins game[0m
[ [ 'X', 'X', '' ], [ 'O', 'O', '' ], [ '', '', '' ] ]
[2K[0G    [32m  âœ“[0m[90m should let player win a game horizontal [0m
[0m    player wins game[0m
[ [ 'X', 'O', '' ], [ 'X', 'O', '' ], [ '', '', '' ] ]
[2K[0G    [32m  âœ“[0m[90m should let player win a game vertical [0m
[0m    player wins game[0m
[ [ 'X', 'O', '' ], [ 'O', 'X', '' ], [ '', '', '' ] ]
[2K[0G    [32m  âœ“[0m[90m should let player win a game horizontal [0m
[0m    player makes illegal move[0m
[ [ 'X', '', '' ], [ '', '', '' ], [ '', '', '' ] ]
[2K[0G    [32m  âœ“[0m[90m should try to make move when not his turn [0m
[0m    player makes illegal move[0m
[ [ 'X', '', '' ], [ '', 'O', '' ], [ '', '', '' ] ]
[2K[0G    [32m  âœ“[0m[90m should try to make move when not his turn [0m
[0m    game ends in draw[0m
[ [ 'X', 'O', 'X' ], [ 'O', 'X', 'X' ], [ 'O', '', 'O' ] ]
[2K[0G    [32m  âœ“[0m[90m should let game end in draw [0m

[0m  join game command[0m
[2K[0G  [32m  âœ“[0m[90m should join game [0m
[2K[0G  [32m  âœ“[0m[90m No game in action [0m

[0m  tictactoe game context[0m
hallo { gameID: '123' } []
[2K[0G  [32m  âœ“[0m[90m should route command to instantiated tictactoe game with event stream from store and return and store generated events. Test using fakes/stubs. [0m
hallo { gameID: '123' } { state: 'fulfilled', value: [] }
[2K[0G  [32m  âœ“[0m[90m should route command to instantiated tictactoe game with event stream from store and return generated events, using mock style tests. [0m[31m(114ms)[0m

[0m  create game command[0m
[2K[0G  [32m  âœ“[0m[90m should create game [0m
[2K[0G  [32m  âœ“[0m[90m should create game with another user another time [0m


[92m [0m[32m 18 passing[0m[90m (509ms)[0m

